---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Packages and data preprocessing

```{r}
library(tidyverse)
library(patchwork)
camcorder::gg_record(
  dir = here::here('2022_w26_pay_gap_uk/img'),
  width = 16,
  height = 14,
  units = 'cm',
  dpi = 300
)
```


```{r}
paygap <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-06-28/paygap.csv') %>% 
  janitor::clean_names()
```


```{r}
after_2017 <- paygap %>% 
  mutate(year = lubridate::year(date_submitted)) %>% 
  filter(year > 2017, diff_median_hourly_percent >= -100)
```

# Gauge Plots

## Helpers and variables

```{r}
compute_polar_coordintates <- function(data, var, width, shift = 0){
  data %>% 
    mutate(
      lower_x = cos({{var}} + shift), 
      lower_y = sin({{var}} + shift),
      upper_x = lower_x * width,
      upper_y = lower_y * width
    )
}

width_gauge <- 1.3
width_data <- 1.3
```

## Compute data

```{r}
gauge_bg <- tibble(phi = seq(0, pi, length.out = 1000)) %>% 
  compute_polar_coordintates(phi, width = width_gauge)

median_of_median_hourly_diff <- after_2017 %>% 
  group_by(year, employer_size) %>% 
  summarise(
    median_diff_hourly_median = median(-diff_median_hourly_percent / 100),
    # minus here is an artifact from Polar coordinates (which is necesary)
    # otherwise negative differences are right of positive differences
    .groups = 'drop'
  ) %>% 
  filter(! employer_size %in% c('Not Provided', '20,000 or more')) %>% 
  mutate(
    employer_size = str_replace(employer_size, 'Less than 250', 'Less than\n250 employees'),
    employer_size = factor(
      employer_size,
      levels = c('Less than\n250 employees', '250 to 499', '500 to 999', '1000 to 4999',
                 '5000 to 19,999', '20,000 or more')
    )
  ) %>% 
  compute_polar_coordintates(median_diff_hourly_median, width = 1, shift = pi / 2)

polar_diff_median_hourly <- after_2017 %>% 
  mutate(
    diff_median_hourly_percent = - diff_median_hourly_percent / 100,
    # minus here is an artifact from Polar coordinates (which is necesary)
    # otherwise negative differences are right of positive differences
  ) %>% 
  compute_polar_coordintates(
    diff_median_hourly_percent,
    width_data,
    shift = pi / 2
  ) %>% 
  select(year, employer_size, lower_x, upper_x, lower_y, upper_y) %>% 
  filter(! employer_size %in%  c('Not Provided', '20,000 or more')) %>% 
  mutate(
    employer_size = str_replace(employer_size, 'Less than 250', 'Less than\n250 employees'),
    employer_size = factor(
      employer_size,
      levels = c('Less than\n250 employees', '250 to 499', '500 to 999', '1000 to 4999',
                 '5000 to 19,999', '20,000 or more')
    )
  )


triangles <- median_of_median_hourly_diff %>% 
  select(year, employer_size, lower_x, lower_y) %>% 
  mutate(factor = list(c(0.8, 1, 0.8))) %>% 
  unnest(factor) %>% 
  mutate(
    x = c(0.75, 1, 0.75) * cos(acos(lower_x) + c(-0.1, 0, 0.1)), 
    y = c(0.75, 1, 0.75) * sin(asin(lower_y) + c(-0.1, 0, 0.1))
  )
```

## Plot variables

```{r}
text_size <- 3.5
title_size <- 30
subtitle_size <- 8
axes_text_size <- 8
gauge_bg_color <- 'white'
bad_color <- '#f78764' # thematic::okabe_ito(7)[4]
good_color <- '#6279B8' #thematic::okabe_ito(3)[3]
max_bad_good_val <- 0.15
font_family_general <- 'Fira Sans'
font_family_title <- 'Oleo Script'

font_color_general <- 'grey30'
font_color_labels <- 'grey30'
triangle_color <- 'grey30'
```


## Plot

```{r}
without_howto <- ggplot() +
  geom_segment(
    data = gauge_bg,
    aes(x = lower_x, xend = upper_x, y = lower_y, yend = upper_y),
    col = gauge_bg_color
  ) +
  geom_segment(
    data = polar_diff_median_hourly,
    aes(
      x = lower_x, xend = upper_x, 
      y = lower_y, yend = upper_y,
      col = lower_x
    ),
    alpha = 0.25,
    size = 0.1
  )  + 
  geom_polygon(
    data = triangles,
    aes(x, y),
    fill = triangle_color
  ) +
  geom_text(
    data = median_of_median_hourly_diff,
    aes(
      x = 0, 
      y = 0, 
      label = scales::percent(
        -median_diff_hourly_median, 
        accuracy = 0.1
      ),
      vjust = 0 
    ),
    size = text_size,
    col = font_color_labels,
    family = font_family_general
  ) +
  scale_color_gradient2(
    low = bad_color,
    high = bad_color,
    mid = good_color,
    limits = c(-max_bad_good_val, max_bad_good_val),
    na.value = bad_color
  ) +
  facet_grid(
    rows = vars(year),
    cols = vars(employer_size)
  ) +
  labs(
    title = 'The gender pay gap still exists',
    subtitle = 'Each year, many employers in the United Kingdom\npublish their figures comparing men and womenâ€™s\naverage pay across their organisation.\nBelow, you see the reported median pay gaps from\n2018 to 2022 for organizations of different sizes. On\nthe right, you can find out how to read this graph.',
    caption = 'TidyTuesday 2022 - Week 26 | Data: gender-pay-gap.service.gov.uk | Graphic: Albert Rapp, @rappa753',
  ) +
  coord_equal(clip = 'off') +
  theme_void() +
  theme(
    legend.position = 'none',
    plot.title = element_text(
      family = font_family_title,
      size = title_size,
      margin = margin(b = 0.75, unit = 'cm')
    ),
    plot.subtitle = element_text(
      size = subtitle_size,
      margin = margin(b = 0.5, unit = 'cm'),
      hjust = 0
    ),
    plot.title.position = 'plot',
    plot.caption.position = 'plot',
    plot.margin = margin(t = 0.5, r = 0.5, b = 0.5, l = 0.5, unit = 'cm'),
    text = element_text(
      family = font_family_general, 
      color = font_color_general,
      size = axes_text_size
    ),
    plot.background = element_rect(
      color = NA,
      fill = '#A7CDBD',
    )
  ) 
```

# How to plot

## Plot variables

```{r}
howto_size <- 1.5
```

## Plot

```{r}
howto <- ggplot() +
  geom_segment(
    data = gauge_bg,
    aes(x = lower_x, xend = upper_x, y = lower_y, yend = upper_y),
    col = gauge_bg_color
  ) +
  geom_segment(
    data = polar_diff_median_hourly %>% slice(1:2000),
    aes(
      x = lower_x, xend = upper_x, 
      y = lower_y, yend = upper_y,
      col = lower_x
    ),
    alpha = 0.25,
    size = 0.1
  ) + 
  geom_polygon(
    data = triangles %>% 
      slice(1:3) %>% 
      mutate(x = 1 * x, y = c(1.2, 1, 1.2) * y),
    aes(x, y),
    fill = triangle_color
  ) +
  scale_color_gradient2(
    low = bad_color,
    high = bad_color,
    mid = good_color,
    limits = c(-max_bad_good_val, max_bad_good_val),
    na.value = bad_color
  )  +
  annotate(
    'text',
    x = -1 - (width_gauge - 1) / 2,
    y = -0.05,
    label = 'Women earn more',
    vjust = 1,
    family = font_family_general,
    col = font_color_general, 
    size = howto_size
  ) +
  annotate(
    'text',
    x = 1 + (width_gauge - 1) / 2,
    y = -0.05,
    label = 'Men earn more',
    vjust = 1,
    family = font_family_general,
    col = font_color_general, 
    size = howto_size
  ) +
  annotate(
    'text',
    x = 0,
    y = width_data + 0.05,
    label = 'Equal pay',
    vjust = 0,
    family = font_family_general,
    col = font_color_general, 
    size = howto_size
  ) +
  annotate(
    'text',
    x = 0.775,
    y = width_data + 0.05,
    label = 'Each line represents\nthe median pay gap\nof ONE organization',
    vjust = 0,
    family = font_family_general,
    col = font_color_general, 
    size = howto_size,
    hjust = 0,
    lineheight = 1
  ) +
  annotate(
    'curve',
    x = 0.5,
    y = 1.2,
    xend = 0.72,
    yend = 1.35,
    curvature = -0.2,
    col = font_color_general,
  ) +
  annotate(
    'text',
    x = 0,
    y = 0,
    label = 'X.X%',
    vjust = 0,
    family = font_family_general,
    col = font_color_general, 
    size = howto_size + 1,
    lineheight = 1
  ) +
  annotate(
    'text',
    x = -0.775,
    y = width_data + 0.05,
    label = 'Median of\nmedian pay gaps',
    hjust = 1,
    vjust = 0,
    family = font_family_general,
    col = font_color_general, 
    size = howto_size,
    lineheight = 1
  ) +
  annotate(
    'curve',
    x = -0.72,
    y = 1.35,
    xend = 0,
    yend = 0.2,
    curvature = -0.2,
    col = font_color_general,
  ) +
  annotate(
    'curve',
    x = -0.35,
    y = 1,
    xend = 0,
    yend = 0.95,
    curvature = 0.2,
    col = font_color_general,
  ) +
  annotate(
    'point',
    x = c(0.72, -0.72), 
    y = c(1.35, 1.35),
    col = font_color_general,
    size = 0.5
  ) +
  coord_equal(clip = 'off') +
  theme_void() +
  theme(
    legend.position = 'none',
    plot.title = element_text(
      family = font_family_title,
      size = title_size,
    ),
    plot.subtitle = element_text(
      size = subtitle_size,
      margin = margin(t = 0.5, unit = 'cm'),
      hjust = 0,
      vjust = 1
    ),
    plot.title.position = 'plot',
    plot.caption.position = 'plot',
    plot.margin = margin(t = 0.5, r = 0.5, b = 0.5, l = 0.5, unit = 'cm'),
    text = element_text(
      family = font_family_general, 
      color = font_color_general,
      size = axes_text_size
    ),
    plot.background = element_rect(
      color = NA,
      fill = '#A7CDBD',
    )
  ) 
```

# Full Plot

```{r}
without_howto +
  inset_element(
    howto,
    left = 0.15,
    right = 1.55,
    bottom = 1.05,
    top = 1.45,
    on_top = F
  )
```

